{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNINjbF6eR0Tx5Ki/YDn0jw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns"],"metadata":{"id":"qdlyYF0_0YJr","executionInfo":{"status":"ok","timestamp":1708179181160,"user_tz":-330,"elapsed":531,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}}},"execution_count":60,"outputs":[]},{"cell_type":"code","source":["from google.colab import drive"],"metadata":{"id":"EHQZtKoR1CLs","executionInfo":{"status":"ok","timestamp":1708179181843,"user_tz":-330,"elapsed":23,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}}},"execution_count":61,"outputs":[]},{"cell_type":"code","source":["drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"AEDi37Sq3hg1","executionInfo":{"status":"ok","timestamp":1708179188405,"user_tz":-330,"elapsed":4228,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"7f3c21b0-7c2c-4537-8924-1ef3173fc2d1"},"execution_count":62,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["dataset = pd.read_csv('/content/movie prediction data set (1).csv', encoding = 'ISO-8859-1')\n","dataset\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"QD67dEsZ34Fk","executionInfo":{"status":"ok","timestamp":1708186905952,"user_tz":-330,"elapsed":1384,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"7d45afbc-057e-4db4-f5af-e79fb35f8d8f"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name    Year Duration            Genre  \\\n","0                                             NaN      NaN            Drama   \n","1      #Gadhvi (He thought he was Gandhi) -2019.0  109 min            Drama   \n","2                             #Homecoming -2021.0   90 min   Drama, Musical   \n","3                                 #Yaaram -2019.0  110 min  Comedy, Romance   \n","4                       ...And Once Again -2010.0  105 min            Drama   \n","...                                   ...     ...      ...              ...   \n","15504                 Zulm Ko Jala Doonga -1988.0      NaN           Action   \n","15505                               Zulmi -1999.0  129 min    Action, Drama   \n","15506                           Zulmi Raj -2005.0      NaN           Action   \n","15507                       Zulmi Shikari -1988.0      NaN           Action   \n","15508                        Zulm-O-Sitam -1998.0  130 min    Action, Drama   \n","\n","       Rating Votes            Director           Actor 1             Actor 2  \\\n","0         NaN   NaN       J.S. Randhawa          Manmauji              Birbal   \n","1         7.0     8       Gaurav Bakshi      Rasika Dugal      Vivek Ghamande   \n","2         NaN   NaN  Soumyajit Majumdar      Sayani Gupta   Plabita Borthakur   \n","3         4.4    35          Ovais Khan           Prateik          Ishita Raj   \n","4         NaN   NaN        Amol Palekar      Rajat Kapoor  Rituparna Sengupta   \n","...       ...   ...                 ...               ...                 ...   \n","15504     4.6    11       Mahendra Shah  Naseeruddin Shah       Sumeet Saigal   \n","15505     4.5   655          Kuku Kohli      Akshay Kumar      Twinkle Khanna   \n","15506     NaN   NaN          Kiran Thej   Sangeeta Tiwari                 NaN   \n","15507     NaN   NaN                 NaN               NaN                 NaN   \n","15508     6.2    20        K.C. Bokadia        Dharmendra          Jaya Prada   \n","\n","               Actor 3  \n","0      Rajendra Bhatia  \n","1        Arvind Jangid  \n","2           Roy Angana  \n","3      Siddhant Kapoor  \n","4          Antara Mali  \n","...                ...  \n","15504    Suparna Anand  \n","15505      Aruna Irani  \n","15506              NaN  \n","15507              NaN  \n","15508      Arjun Sarja  \n","\n","[15509 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-cd71aeb4-edfd-449e-8e98-245bf108c1fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>90 min</td>\n","      <td>Drama, Musical</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>105 min</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15504</th>\n","      <td>Zulm Ko Jala Doonga</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>4.6</td>\n","      <td>11</td>\n","      <td>Mahendra Shah</td>\n","      <td>Naseeruddin Shah</td>\n","      <td>Sumeet Saigal</td>\n","      <td>Suparna Anand</td>\n","    </tr>\n","    <tr>\n","      <th>15505</th>\n","      <td>Zulmi</td>\n","      <td>-1999.0</td>\n","      <td>129 min</td>\n","      <td>Action, Drama</td>\n","      <td>4.5</td>\n","      <td>655</td>\n","      <td>Kuku Kohli</td>\n","      <td>Akshay Kumar</td>\n","      <td>Twinkle Khanna</td>\n","      <td>Aruna Irani</td>\n","    </tr>\n","    <tr>\n","      <th>15506</th>\n","      <td>Zulmi Raj</td>\n","      <td>-2005.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Kiran Thej</td>\n","      <td>Sangeeta Tiwari</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15507</th>\n","      <td>Zulmi Shikari</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15508</th>\n","      <td>Zulm-O-Sitam</td>\n","      <td>-1998.0</td>\n","      <td>130 min</td>\n","      <td>Action, Drama</td>\n","      <td>6.2</td>\n","      <td>20</td>\n","      <td>K.C. Bokadia</td>\n","      <td>Dharmendra</td>\n","      <td>Jaya Prada</td>\n","      <td>Arjun Sarja</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15509 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cd71aeb4-edfd-449e-8e98-245bf108c1fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cd71aeb4-edfd-449e-8e98-245bf108c1fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cd71aeb4-edfd-449e-8e98-245bf108c1fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e25987ee-10e0-4ea4-a54f-129654279f16\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e25987ee-10e0-4ea4-a54f-129654279f16')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e25987ee-10e0-4ea4-a54f-129654279f16 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"num_unique_values\": 13838,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"num_unique_values\": 102,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"168 min\",\n          \"99 min\",\n          \"179 min\"\n        ],\n        \"num_unique_values\": 182,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Family, Mystery\",\n          \"Comedy, Fantasy, Musical\",\n          \"Action, Adventure, Crime\"\n        ],\n        \"num_unique_values\": 485,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"num_unique_values\": 84,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"num_unique_values\": 2034,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"num_unique_values\": 5938,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"num_unique_values\": 4718,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"num_unique_values\": 4891,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"num_unique_values\": 4820,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"M7zatu5p34SW","executionInfo":{"status":"ok","timestamp":1708179194521,"user_tz":-330,"elapsed":736,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"61238601-6ee8-41a4-913d-cfea290373b5"},"execution_count":64,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration            Genre  \\\n","0                                         NaN      NaN            Drama   \n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min            Drama   \n","2                         #Homecoming -2021.0   90 min   Drama, Musical   \n","3                             #Yaaram -2019.0  110 min  Comedy, Romance   \n","4                   ...And Once Again -2010.0  105 min            Drama   \n","\n","   Rating Votes            Director       Actor 1             Actor 2  \\\n","0     NaN   NaN       J.S. Randhawa      Manmauji              Birbal   \n","1     7.0     8       Gaurav Bakshi  Rasika Dugal      Vivek Ghamande   \n","2     NaN   NaN  Soumyajit Majumdar  Sayani Gupta   Plabita Borthakur   \n","3     4.4    35          Ovais Khan       Prateik          Ishita Raj   \n","4     NaN   NaN        Amol Palekar  Rajat Kapoor  Rituparna Sengupta   \n","\n","           Actor 3  \n","0  Rajendra Bhatia  \n","1    Arvind Jangid  \n","2       Roy Angana  \n","3  Siddhant Kapoor  \n","4      Antara Mali  "],"text/html":["\n","  <div id=\"df-219c9f59-5e9e-43d4-bd8a-68d407b31a5f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>90 min</td>\n","      <td>Drama, Musical</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>105 min</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-219c9f59-5e9e-43d4-bd8a-68d407b31a5f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-219c9f59-5e9e-43d4-bd8a-68d407b31a5f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-219c9f59-5e9e-43d4-bd8a-68d407b31a5f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-75550705-2811-46b5-bf0f-999098e04f12\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-75550705-2811-46b5-bf0f-999098e04f12')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-75550705-2811-46b5-bf0f-999098e04f12 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"num_unique_values\": 13838,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"num_unique_values\": 102,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"168 min\",\n          \"99 min\",\n          \"179 min\"\n        ],\n        \"num_unique_values\": 182,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Family, Mystery\",\n          \"Comedy, Fantasy, Musical\",\n          \"Action, Adventure, Crime\"\n        ],\n        \"num_unique_values\": 485,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"num_unique_values\": 84,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"num_unique_values\": 2034,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"num_unique_values\": 5938,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"num_unique_values\": 4718,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"num_unique_values\": 4891,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"num_unique_values\": 4820,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":64}]},{"cell_type":"code","source":["dataset.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"tQtDgCg5480W","executionInfo":{"status":"ok","timestamp":1708179197837,"user_tz":-330,"elapsed":583,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"5d5de03e-a437-4251-a4b4-5873167c641e"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 15509 entries, 0 to 15508\n","Data columns (total 10 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   Name      15509 non-null  object \n"," 1   Year      14981 non-null  float64\n"," 2   Duration  7240 non-null   object \n"," 3   Genre     13632 non-null  object \n"," 4   Rating    7919 non-null   float64\n"," 5   Votes     7920 non-null   object \n"," 6   Director  14984 non-null  object \n"," 7   Actor 1   13892 non-null  object \n"," 8   Actor 2   13125 non-null  object \n"," 9   Actor 3   12365 non-null  object \n","dtypes: float64(2), object(8)\n","memory usage: 1.2+ MB\n"]}]},{"cell_type":"code","source":["dataset.describe()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"LwXxX-ej5Vp1","executionInfo":{"status":"ok","timestamp":1708179204207,"user_tz":-330,"elapsed":1030,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"76a8515f-7e95-43df-f96c-808654856e0f"},"execution_count":66,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Year       Rating\n","count  14981.000000  7919.000000\n","mean   -1987.012215     5.841621\n","std       25.416689     1.381777\n","min    -2022.000000     1.100000\n","25%    -2009.000000     4.900000\n","50%    -1991.000000     6.000000\n","75%    -1968.000000     6.800000\n","max    -1913.000000    10.000000"],"text/html":["\n","  <div id=\"df-d6f004f1-8ca2-455a-894e-d12f0b374502\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Year</th>\n","      <th>Rating</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14981.000000</td>\n","      <td>7919.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>-1987.012215</td>\n","      <td>5.841621</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.416689</td>\n","      <td>1.381777</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-2022.000000</td>\n","      <td>1.100000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>-2009.000000</td>\n","      <td>4.900000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>-1991.000000</td>\n","      <td>6.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>-1968.000000</td>\n","      <td>6.800000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>-1913.000000</td>\n","      <td>10.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d6f004f1-8ca2-455a-894e-d12f0b374502')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d6f004f1-8ca2-455a-894e-d12f0b374502 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d6f004f1-8ca2-455a-894e-d12f0b374502');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5005f3fa-6594-4ad6-a1fe-50e72cfa23fa\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5005f3fa-6594-4ad6-a1fe-50e72cfa23fa')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5005f3fa-6594-4ad6-a1fe-50e72cfa23fa button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5937.609745721985,\n        \"min\": -2022.0,\n        \"max\": 14981.0,\n        \"samples\": [\n          -1987.0122154729324,\n          -1991.0,\n          14981.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2797.9713272009612,\n        \"min\": 1.1,\n        \"max\": 7919.0,\n        \"samples\": [\n          5.841621416845562,\n          6.0,\n          7919.0\n        ],\n        \"num_unique_values\": 8,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":66}]},{"cell_type":"markdown","source":["Data filtering and preprocessing\n"],"metadata":{"id":"y7wz3mtE5kV4"}},{"cell_type":"code","source":["attributes = dataset.columns\n","print(attributes)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"VEdyNMiu484m","executionInfo":{"status":"ok","timestamp":1708179206879,"user_tz":-330,"elapsed":18,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"21eabb34-12b3-4f20-e65f-b329229185d7"},"execution_count":68,"outputs":[{"output_type":"stream","name":"stdout","text":["Index(['Name', 'Year', 'Duration', 'Genre', 'Rating', 'Votes', 'Director',\n","       'Actor 1', 'Actor 2', 'Actor 3'],\n","      dtype='object')\n"]}]},{"cell_type":"code","source":["dataset.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"gxumca8s488q","executionInfo":{"status":"ok","timestamp":1708179209248,"user_tz":-330,"elapsed":491,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"77468031-e112-4f15-cb7d-f2765610c53e"},"execution_count":69,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Name           0\n","Year         528\n","Duration    8269\n","Genre       1877\n","Rating      7590\n","Votes       7589\n","Director     525\n","Actor 1     1617\n","Actor 2     2384\n","Actor 3     3144\n","dtype: int64"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["shape = dataset.shape\n"],"metadata":{"id":"qP7yErto56iG","executionInfo":{"status":"ok","timestamp":1708186927621,"user_tz":-330,"elapsed":493,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}}},"execution_count":111,"outputs":[]},{"cell_type":"code","source":["unique_genres = dataset['Genre'].unique()\n","print(\"Unique Genres:\", unique_genres)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"0RVUBllJ57Ak","executionInfo":{"status":"ok","timestamp":1708179213193,"user_tz":-330,"elapsed":19,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"6fc2ec9e-7133-4d0e-db21-96532912b02f"},"execution_count":71,"outputs":[{"output_type":"stream","name":"stdout","text":["Unique Genres: ['Drama' 'Drama, Musical' 'Comedy, Romance' 'Comedy, Drama, Musical'\n"," 'Drama, Romance, War' 'Documentary' 'Horror, Mystery, Thriller'\n"," 'Action, Crime, Thriller' 'Horror' 'Horror, Romance, Thriller'\n"," 'Comedy, Drama, Romance' 'Thriller' 'Comedy, Drama' nan\n"," 'Comedy, Drama, Fantasy' 'Comedy, Drama, Family' 'Crime, Drama, Mystery'\n"," 'Horror, Thriller' 'Biography' 'Comedy, Horror' 'Action'\n"," 'Drama, Horror, Mystery' 'Comedy' 'Action, Thriller' 'Drama, History'\n"," 'Drama, History, Sport' 'Horror, Mystery, Romance' 'Horror, Mystery'\n"," 'Drama, Horror, Romance' 'Action, Drama, History' 'Action, Drama, War'\n"," 'Comedy, Family' 'Adventure, Horror, Mystery' 'Action, Sci-Fi'\n"," 'Crime, Mystery, Thriller' 'War' 'Sport' 'Biography, Drama, History'\n"," 'Horror, Romance' 'Crime, Drama' 'Drama, Romance' 'Adventure, Drama'\n"," 'Comedy, Mystery, Thriller' 'Action, Crime, Drama' 'Crime, Thriller'\n"," 'Horror, Sci-Fi, Thriller' 'Crime, Drama, Thriller'\n"," 'Drama, Mystery, Thriller' 'Drama, Sport' 'Drama, Family, Musical'\n"," 'Action, Comedy' 'Comedy, Thriller' 'Action, Adventure, Fantasy'\n"," 'Drama, Romance, Thriller' 'Action, Drama' 'Drama, Horror, Musical'\n"," 'Action, Biography, Drama' 'Adventure, Comedy, Drama' 'Mystery'\n"," 'Action, Fantasy, Mystery' 'Adventure, Drama, Mystery'\n"," 'Mystery, Thriller' 'Adventure' 'Drama, Musical, Thriller'\n"," 'Comedy, Crime, Drama' 'Musical, Romance' 'Documentary, Music'\n"," 'Documentary, History, Music' 'Drama, Fantasy, Mystery'\n"," 'Drama, Family, Sport' 'Drama, Thriller' 'Documentary, Biography'\n"," 'Action, Adventure, Comedy' 'Romance' 'Comedy, Drama, Music'\n"," 'Comedy, Horror, Mystery' 'Musical' 'Musical, Romance, Drama'\n"," 'Family, Romance' 'Action, Sci-Fi, Thriller' 'Action, Drama, Romance'\n"," 'Mystery, Romance' 'Fantasy' 'Family' 'Drama, Family'\n"," 'Action, Comedy, Drama' 'Action, Drama, Thriller'\n"," 'Drama, Horror, Thriller' 'Drama, Musical, Romance' 'Comedy, Sci-Fi'\n"," 'Action, Romance' 'Action, Crime' 'Action, Drama, Crime'\n"," 'Drama, Family, Music' 'Action, Mystery, Thriller'\n"," 'Action, Drama, Family' 'Action, Mystery' 'Drama, History, Romance'\n"," 'Crime, Drama, Music' 'Sci-Fi' 'Animation' 'Crime, Mystery, Romance'\n"," 'Action, Adventure, Romance' 'Music, Romance' 'Action, Comedy, Crime'\n"," 'Comedy, Family, Fantasy' 'Romance, Drama' 'Drama, Family, Romance'\n"," 'Romance, Drama, Family' 'Musical, Romance, Thriller'\n"," 'Family, Musical, Romance' 'Action, Drama, Fantasy' 'Family, Drama'\n"," 'Crime, Drama, Romance' 'Musical, Drama, Romance' 'Drama, Music, Musical'\n"," 'Drama, Mystery' 'Adventure, Comedy, Romance' 'Crime, Drama, Horror'\n"," 'Family, Music, Musical' 'Action, Musical, Thriller'\n"," 'Action, Romance, Thriller' 'Romance, Thriller' 'Drama, Music'\n"," 'Crime, Drama, Musical' 'Action, Crime, Mystery'\n"," 'Action, Adventure, Thriller' 'Comedy, Romance, Sci-Fi' 'Crime'\n"," 'Action, Drama, Mystery' 'Action, Comedy, Thriller' 'Biography, Drama'\n"," 'Action, Comedy, Fantasy' 'Drama, Family, Horror'\n"," 'Action, Adventure, Family' 'Documentary, Biography, Musical'\n"," 'Action, Drama, Musical' 'Adventure, Thriller' 'Crime, Mystery'\n"," 'Drama, Crime' 'Drama, Fantasy, Romance' 'Comedy, Romance, Thriller'\n"," 'Musical, Comedy, Drama' 'Biography, History, War'\n"," 'Action, Comedy, Romance' 'Drama, History, Musical'\n"," 'Action, Crime, Horror' 'Adventure, Fantasy' 'Adventure, Drama, Fantasy'\n"," 'Adventure, Fantasy, Romance' 'Action, Adventure, Drama'\n"," 'Action, Adventure' 'Comedy, Crime' 'Crime, Drama, Fantasy'\n"," 'Adventure, Drama, Romance' 'History' 'Drama, Fantasy, Thriller'\n"," 'Musical, Fantasy' 'Documentary, Thriller' 'Mystery, Romance, Musical'\n"," 'Family, Drama, Romance' 'History, Musical, Romance'\n"," 'Musical, Drama, Crime' 'Adventure, Crime, Romance'\n"," 'Musical, Thriller, Mystery' 'Drama, Comedy' 'Biography, Drama, Romance'\n"," 'Biography, Music' 'Biography, Drama, Music' 'Drama, Sci-Fi'\n"," 'Drama, Family, Thriller' 'Comedy, Musical, Romance'\n"," 'Drama, Family, Comedy' 'Action, Thriller, Romance'\n"," 'Animation, Adventure' 'Action, Crime, Musical' 'Action, Crime, Romance'\n"," 'Animation, Action, Adventure' 'Action, Drama, Sport' 'Comedy, History'\n"," 'Documentary, History' 'Drama, Comedy, Family' 'Action, Adventure, Crime'\n"," 'Documentary, Biography, Music' 'Comedy, Musical'\n"," 'Biography, Crime, Thriller' 'Adventure, Mystery, Thriller'\n"," 'Biography, Drama, Sport' 'Action, Comedy, Musical'\n"," 'Mystery, Romance, Thriller' 'Action, Adventure, Musical'\n"," 'Crime, Musical, Mystery' 'Action, Thriller, Crime'\n"," 'Adventure, Comedy, Crime' 'Comedy, Horror, Musical' 'Adventure, Family'\n"," 'Family, Thriller' 'Drama, Action, Crime' 'Drama, War'\n"," 'Action, Drama, Adventure' 'Adventure, Fantasy, History'\n"," 'Fantasy, Musical' 'Comedy, Drama, Thriller' 'Drama, Fantasy'\n"," 'Musical, Drama' 'Action, Drama, Horror' 'Biography, Crime, Drama'\n"," 'Action, Drama, Music' 'Adventure, Drama, Family'\n"," 'Drama, Romance, Musical' 'Comedy, Musical, Drama'\n"," 'Adventure, Comedy, Musical' 'Crime, Drama, Family'\n"," 'Thriller, Musical, Mystery' 'Documentary, Adventure, Crime'\n"," 'Drama, Action, Horror' 'Adventure, Crime, Drama'\n"," 'Documentary, Biography, Sport' 'Crime, Fantasy, Mystery'\n"," 'Documentary, Biography, Drama' 'Action, Fantasy, Thriller'\n"," 'Adventure, Drama, History' 'Animation, Drama, History'\n"," 'Comedy, Horror, Thriller' 'Drama, Family, History' 'Animation, History'\n"," 'Biography, Drama, Musical' 'Music' 'Family, Comedy' 'Adventure, Mystery'\n"," 'Family, Fantasy' 'Documentary, History, News' 'Drama, Mystery, Romance'\n"," 'Comedy, Fantasy' 'Action, Crime, Family' 'Drama, Musical, Mystery'\n"," 'Action, Thriller, Mystery' 'Drama, Family, Fantasy' 'Action, Family'\n"," 'Action, Adventure, Mystery' 'Horror, Fantasy' 'Comedy, Action'\n"," 'Adventure, Romance' 'Drama, Adventure' 'Animation, Drama, Romance'\n"," 'Comedy, Crime, Romance' 'Adventure, Comedy' 'Comedy, Drama, Sport'\n"," 'Documentary, Crime, History' 'Musical, Mystery, Drama'\n"," 'Adventure, Drama, Sci-Fi' 'Action, Romance, Western'\n"," 'Comedy, Fantasy, Romance' 'Animation, Action, Comedy'\n"," 'Drama, Fantasy, Sci-Fi' 'Drama, Horror' 'Family, Drama, Comedy'\n"," 'Action, Adventure, History' 'Comedy, Family, Romance'\n"," 'Biography, History' 'Animation, Family' 'Drama, Fantasy, History'\n"," 'Animation, Adventure, Fantasy' 'Adventure, Comedy, Family'\n"," 'Drama, History, War' 'Animation, Drama, Fantasy'\n"," 'Action, Musical, Romance' 'Crime, Action, Drama'\n"," 'Comedy, Romance, Musical' 'Fantasy, Drama' 'Musical, Action, Crime'\n"," 'Documentary, Drama' 'Action, Horror, Thriller' 'Action, Horror, Sci-Fi'\n"," 'Mystery, Sci-Fi, Thriller' 'Biography, Family' 'Drama, Action, Comedy'\n"," 'Drama, Music, Romance' 'Action, Biography, Crime'\n"," 'Adventure, Drama, Musical' 'Family, Music, Romance'\n"," 'Fantasy, Mystery, Romance' 'Drama, Crime, Family'\n"," 'Drama, Family, Action' 'Romance, Comedy, Drama'\n"," 'Animation, Adventure, Comedy' 'Sci-Fi, Thriller'\n"," 'Romance, Family, Drama' 'Action, Family, Thriller'\n"," 'Adventure, Crime, Thriller' 'Drama, Romance, Sport'\n"," 'Comedy, Crime, Mystery' 'Adventure, Comedy, Mystery' 'Action, Fantasy'\n"," 'Comedy, Mystery' 'Animation, Adventure, Family'\n"," 'Adventure, Drama, Music' 'Biography, Drama, War'\n"," 'Documentary, Comedy, Drama' 'Musical, Drama, Family'\n"," 'Animation, Comedy, Drama' 'Fantasy, Musical, Drama'\n"," 'Adventure, Crime, Mystery' 'Comedy, Drama, Mystery' 'Documentary, News'\n"," 'Drama, Musical, Family' 'Action, Romance, Drama'\n"," 'Comedy, Crime, Thriller' 'Action, Musical' 'Action, History'\n"," 'Action, Comedy, Mystery' 'Drama, Family, Mystery'\n"," 'Adventure, Drama, Thriller' 'Documentary, Reality-TV'\n"," 'Action, Fantasy, Horror' 'Drama, History, Thriller'\n"," 'Documentary, Family' 'Documentary, Biography, Family' 'Comedy, Sport'\n"," 'Animation, Comedy, Family' 'Crime, Romance, Thriller'\n"," 'Comedy, Musical, Action' 'Action, Mystery, Sci-Fi'\n"," 'Comedy, Crime, Musical' 'Drama, Adventure, Action' 'History, Romance'\n"," 'Reality-TV' 'Fantasy, History' 'Family, Drama, Thriller'\n"," 'Musical, Mystery, Thriller' 'Musical, Comedy, Romance'\n"," 'Musical, Action, Drama' 'Action, Musical, War' 'Romance, Comedy'\n"," 'Horror, Crime, Thriller' 'Crime, Drama, History' 'Comedy, Drama, Horror'\n"," 'Crime, Horror, Thriller' 'Animation, Comedy' 'Romance, Action, Crime'\n"," 'Musical, Thriller' 'Action, Romance, Comedy' 'Comedy, Family, Musical'\n"," 'Horror, Drama, Mystery' 'Thriller, Mystery, Family'\n"," 'Comedy, Drama, Sci-Fi' 'Documentary, Adventure'\n"," 'Documentary, Biography, Crime' 'Musical, Action' 'Musical, Mystery'\n"," 'Action, Crime, Sci-Fi' 'Action, Horror, Mystery' 'Fantasy, Horror'\n"," 'Adventure, Family, Fantasy' 'Fantasy, Sci-Fi' 'Comedy, War'\n"," 'Romance, Action, Drama' 'Musical, Family, Romance'\n"," 'Romance, Drama, Action' 'Family, Comedy, Drama' 'Comedy, Music, Romance'\n"," 'Comedy, Family, Sci-Fi' 'Action, Drama, Western'\n"," 'Adventure, Romance, Thriller' 'Biography, Comedy, Drama'\n"," 'Action, Mystery, Romance' 'Romance, Sport' 'Crime, Romance'\n"," 'Action, Thriller, Western' 'Crime, Musical, Romance'\n"," 'Romance, Thriller, Mystery' 'Drama, Crime, Mystery'\n"," 'Biography, Drama, Family' 'Action, Family, Mystery'\n"," 'Comedy, Mystery, Romance' 'Drama, Thriller, Action' 'Documentary, Short'\n"," 'Documentary, Western' 'Musical, Family, Drama' 'Action, Family, Musical'\n"," 'Animation, Family, Musical' 'Drama, Fantasy, Horror'\n"," 'Action, Adventure, Sci-Fi' 'Drama, Action, Musical'\n"," 'Drama, Musical, Sport' 'Action, Comedy, Horror'\n"," 'Drama, Fantasy, Musical' 'Action, Fantasy, Musical' 'Animation, Action'\n"," 'Comedy, Music' 'Documentary, Drama, Romance' 'Drama, Music, Thriller'\n"," 'Fantasy, Musical, Mystery' 'Drama, Fantasy, War' 'Action, War'\n"," 'Action, Adventure, War' 'Horror, Musical' 'Fantasy, Mystery, Thriller'\n"," 'Adventure, Biography, Drama' 'Family, Romance, Sci-Fi'\n"," 'Drama, Romance, Family' 'Animation, Adventure, Drama'\n"," 'Family, Romance, Drama' 'Animation, Action, Sci-Fi'\n"," 'Adventure, Comedy, Fantasy' 'Comedy, Crime, Family'\n"," 'Horror, Musical, Thriller' 'Biography, Drama, Thriller' 'Drama, Western'\n"," 'Romance, Sci-Fi, Thriller' 'Comedy, Musical, Family'\n"," 'Comedy, Horror, Romance' 'Thriller, Action' 'Fantasy, Thriller, Action'\n"," 'Fantasy, Romance' 'Action, Drama, Comedy' 'Family, Fantasy, Romance'\n"," 'Comedy, Crime, Horror' 'Horror, Mystery, Sci-Fi'\n"," 'Animation, Action, Drama' 'Family, Mystery'\n"," 'Adventure, Biography, History' 'Fantasy, Horror, Mystery'\n"," 'Family, Musical' 'Drama, Family, Adventure' 'Crime, Horror, Mystery'\n"," 'Documentary, Drama, Fantasy' 'Action, Adventure, Biography'\n"," 'Biography, History, Thriller' 'Action, Family, Drama'\n"," 'Documentary, Drama, Sport' 'Thriller, Mystery' 'Musical, Drama, Comedy'\n"," 'Documentary, History, War' 'Adventure, Horror, Thriller'\n"," 'Action, Adventure, Horror' 'Action, Crime, War'\n"," 'Adventure, Musical, Romance' 'Action, Fantasy, Sci-Fi'\n"," 'Drama, Comedy, Action' 'Documentary, Sport'\n"," 'Documentary, Adventure, Music' 'Drama, Action, Family'\n"," 'Adventure, History, Thriller' 'Adventure, Horror, Romance'\n"," 'Adventure, Crime, Horror' 'Mystery, Musical, Romance'\n"," 'Action, Crime, History' 'Documentary, Musical'\n"," 'Adventure, Fantasy, Musical' 'Documentary, Family, History'\n"," 'Documentary, Drama, Family' 'Drama, Mystery, Sci-Fi'\n"," 'Animation, Drama, Musical' 'Drama, History, Mystery'\n"," 'Drama, Sport, Thriller' 'Action, Crime, Fantasy'\n"," 'Comedy, Musical, Mystery' 'Romance, Musical, Action'\n"," 'Musical, Drama, Fantasy' 'Animation, Family, History'\n"," 'Action, Drama, News' 'Romance, Musical, Comedy'\n"," 'Adventure, Fantasy, Horror' 'Adventure, History'\n"," 'Comedy, Drama, History' 'Mystery, Sci-Fi' 'Action, Thriller, War'\n"," 'Documentary, Drama, News' 'Documentary, Crime, Mystery'\n"," 'Adventure, Horror' 'Animation, Drama, Adventure'\n"," 'Crime, Horror, Romance' 'Documentary, Adventure, Drama'\n"," 'Documentary, Biography, History' 'Fantasy, Horror, Romance'\n"," 'Comedy, Fantasy, Musical' 'Crime, Musical, Thriller' 'Documentary, War'\n"," 'Action, Comedy, War' 'Crime, Drama, Sport' 'Musical, Adventure, Drama'\n"," 'Horror, Romance, Sci-Fi' 'Musical, Mystery, Romance'\n"," 'Romance, Musical, Drama' 'Adventure, Fantasy, Sci-Fi']\n"]}]},{"cell_type":"code","source":["rating_dist = dataset['Rating'].value_counts()\n","print(\"Rating Distribution:\\n\", rating_dist)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"ZI4hoe3P6hsj","executionInfo":{"status":"ok","timestamp":1708179217392,"user_tz":-330,"elapsed":58,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"541f9295-a960-4848-e0de-1c5caedca53c"},"execution_count":72,"outputs":[{"output_type":"stream","name":"stdout","text":["Rating Distribution:\n"," 6.2     269\n","6.8     264\n","6.5     254\n","6.6     239\n","6.7     227\n","       ... \n","9.6       1\n","1.4       1\n","9.7       1\n","10.0      1\n","1.1       1\n","Name: Rating, Length: 84, dtype: int64\n"]}]},{"cell_type":"code","source":["dataset.drop_duplicates(inplace = True)"],"metadata":{"id":"8jckpNto6hxK","executionInfo":{"status":"ok","timestamp":1708179220095,"user_tz":-330,"elapsed":603,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}}},"execution_count":73,"outputs":[]},{"cell_type":"code","source":["attributes = ['Name', 'Year', 'Duration', 'Votes','Rating' ]\n","dataset.dropna(subset = attributes, inplace = True)\n","missing_val = dataset.isna().sum()\n","print(missing_val)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"A_csEj696h0s","executionInfo":{"status":"ok","timestamp":1708179220576,"user_tz":-330,"elapsed":12,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"7ea454e8-9386-4be1-e1bc-c10e3dcaf366"},"execution_count":74,"outputs":[{"output_type":"stream","name":"stdout","text":["Name          0\n","Year          0\n","Duration      0\n","Genre        31\n","Rating        0\n","Votes         0\n","Director      1\n","Actor 1      75\n","Actor 2     117\n","Actor 3     163\n","dtype: int64\n"]}]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"or4edQx_ElTN","executionInfo":{"status":"ok","timestamp":1708179223250,"user_tz":-330,"elapsed":511,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"2bc709b4-f1cb-4202-939f-ad78d7c87acd"},"execution_count":75,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration  \\\n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min   \n","3                             #Yaaram -2019.0  110 min   \n","5                ...Aur Pyaar Ho Gaya -1997.0  147 min   \n","6                           ...Yahaan -2005.0  142 min   \n","8                  ?: A Question Mark -2012.0   82 min   \n","\n","                       Genre  Rating  Votes        Director          Actor 1  \\\n","1                      Drama     7.0      8   Gaurav Bakshi     Rasika Dugal   \n","3            Comedy, Romance     4.4     35      Ovais Khan          Prateik   \n","5     Comedy, Drama, Musical     4.7    827    Rahul Rawail       Bobby Deol   \n","6        Drama, Romance, War     7.4  1,086  Shoojit Sircar  Jimmy Sheirgill   \n","8  Horror, Mystery, Thriller     5.6    326   Allyson Patel        Yash Dave   \n","\n","                  Actor 2          Actor 3  \n","1          Vivek Ghamande    Arvind Jangid  \n","3              Ishita Raj  Siddhant Kapoor  \n","5  Aishwarya Rai Bachchan    Shammi Kapoor  \n","6          Minissha Lamba   Yashpal Sharma  \n","8          Muntazir Ahmad     Kiran Bhatia  "],"text/html":["\n","  <div id=\"df-abf650ae-b32a-40ee-a097-8be3f9dcfc93\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>-1997.0</td>\n","      <td>147 min</td>\n","      <td>Comedy, Drama, Musical</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>...Yahaan</td>\n","      <td>-2005.0</td>\n","      <td>142 min</td>\n","      <td>Drama, Romance, War</td>\n","      <td>7.4</td>\n","      <td>1,086</td>\n","      <td>Shoojit Sircar</td>\n","      <td>Jimmy Sheirgill</td>\n","      <td>Minissha Lamba</td>\n","      <td>Yashpal Sharma</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>?: A Question Mark</td>\n","      <td>-2012.0</td>\n","      <td>82 min</td>\n","      <td>Horror, Mystery, Thriller</td>\n","      <td>5.6</td>\n","      <td>326</td>\n","      <td>Allyson Patel</td>\n","      <td>Yash Dave</td>\n","      <td>Muntazir Ahmad</td>\n","      <td>Kiran Bhatia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abf650ae-b32a-40ee-a097-8be3f9dcfc93')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abf650ae-b32a-40ee-a097-8be3f9dcfc93 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abf650ae-b32a-40ee-a097-8be3f9dcfc93');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-57f7fe39-dd82-42c8-8a5b-203fc8c8283b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-57f7fe39-dd82-42c8-8a5b-203fc8c8283b')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-57f7fe39-dd82-42c8-8a5b-203fc8c8283b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 5851,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Commando\",\n          \"Bewajah\",\n          \"Anurodh\"\n        ],\n        \"num_unique_values\": 5570,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.91463962825256,\n        \"min\": -2021.0,\n        \"max\": -1931.0,\n        \"samples\": [\n          -1948.0,\n          -1974.0,\n          -1967.0\n        ],\n        \"num_unique_values\": 91,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"138 min\",\n          \"111 min\",\n          \"62 min\"\n        ],\n        \"num_unique_values\": 178,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Romance, Drama, Family\",\n          \"Comedy, Drama, Horror\",\n          \"Comedy, Crime, Thriller\"\n        ],\n        \"num_unique_values\": 393,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3899422193255218,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          8.4,\n          7.0,\n          5.5\n        ],\n        \"num_unique_values\": 83,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"253\",\n          \"4,132\",\n          \"2,20,118\"\n        ],\n        \"num_unique_values\": 2030,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Faisal Saif\",\n          \"Sudipto Sen\",\n          \"Amit Kumar\"\n        ],\n        \"num_unique_values\": 2549,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Arjun Chakraborty\",\n          \"Sonu Nigam\",\n          \"Ram Awana\"\n        ],\n        \"num_unique_values\": 2046,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Mrinmayee Godbole\",\n          \"Aditi Rao Hydari\",\n          \"Anoma Pabuwal\"\n        ],\n        \"num_unique_values\": 2373,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Prashant Narayanan\",\n          \"Aditi Sharma\",\n          \"Izeqiel McCoy\"\n        ],\n        \"num_unique_values\": 2572,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["input=dataset.drop(['Rating', 'Duration', 'Genre','Votes'], axis=1)\n","t=dataset['Rating']"],"metadata":{"id":"pz7fFG7xEvlB","executionInfo":{"status":"ok","timestamp":1708187046697,"user_tz":-330,"elapsed":489,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}}},"execution_count":118,"outputs":[]},{"cell_type":"code","source":["t.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KlMzQklhFlfa","executionInfo":{"status":"ok","timestamp":1708187050426,"user_tz":-330,"elapsed":502,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"7932d4c4-44c7-408a-a1e3-cf0f1c380a0d"},"execution_count":119,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    NaN\n","1    7.0\n","2    NaN\n","3    4.4\n","4    NaN\n","Name: Rating, dtype: float64"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["input.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ql8kocWBFrLP","executionInfo":{"status":"ok","timestamp":1708187052161,"user_tz":-330,"elapsed":27,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"e0411a1c-4f2e-412c-94cc-92b0a19d0cb7"},"execution_count":120,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year            Director  \\\n","0                                         NaN       J.S. Randhawa   \n","1  #Gadhvi (He thought he was Gandhi) -2019.0       Gaurav Bakshi   \n","2                         #Homecoming -2021.0  Soumyajit Majumdar   \n","3                             #Yaaram -2019.0          Ovais Khan   \n","4                   ...And Once Again -2010.0        Amol Palekar   \n","\n","        Actor 1             Actor 2          Actor 3  \n","0      Manmauji              Birbal  Rajendra Bhatia  \n","1  Rasika Dugal      Vivek Ghamande    Arvind Jangid  \n","2  Sayani Gupta   Plabita Borthakur       Roy Angana  \n","3       Prateik          Ishita Raj  Siddhant Kapoor  \n","4  Rajat Kapoor  Rituparna Sengupta      Antara Mali  "],"text/html":["\n","  <div id=\"df-c0b9e150-05f9-4cf1-90ab-40c463e669e7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0b9e150-05f9-4cf1-90ab-40c463e669e7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c0b9e150-05f9-4cf1-90ab-40c463e669e7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c0b9e150-05f9-4cf1-90ab-40c463e669e7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b76ad961-5181-41a8-a8e4-2e6428d5f034\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b76ad961-5181-41a8-a8e4-2e6428d5f034')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b76ad961-5181-41a8-a8e4-2e6428d5f034 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"input","summary":"{\n  \"name\": \"input\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"num_unique_values\": 13838,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"num_unique_values\": 102,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"num_unique_values\": 5938,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"num_unique_values\": 4718,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"num_unique_values\": 4891,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"num_unique_values\": 4820,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["dataset\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":510},"id":"QXUZ31Yg7jo9","executionInfo":{"status":"ok","timestamp":1708187056067,"user_tz":-330,"elapsed":579,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"eea3dff3-adb0-4836-c5d6-50ca36c44d92"},"execution_count":121,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                     Name    Year Duration            Genre  \\\n","0                                             NaN      NaN            Drama   \n","1      #Gadhvi (He thought he was Gandhi) -2019.0  109 min            Drama   \n","2                             #Homecoming -2021.0   90 min   Drama, Musical   \n","3                                 #Yaaram -2019.0  110 min  Comedy, Romance   \n","4                       ...And Once Again -2010.0  105 min            Drama   \n","...                                   ...     ...      ...              ...   \n","15504                 Zulm Ko Jala Doonga -1988.0      NaN           Action   \n","15505                               Zulmi -1999.0  129 min    Action, Drama   \n","15506                           Zulmi Raj -2005.0      NaN           Action   \n","15507                       Zulmi Shikari -1988.0      NaN           Action   \n","15508                        Zulm-O-Sitam -1998.0  130 min    Action, Drama   \n","\n","       Rating Votes            Director           Actor 1             Actor 2  \\\n","0         NaN   NaN       J.S. Randhawa          Manmauji              Birbal   \n","1         7.0     8       Gaurav Bakshi      Rasika Dugal      Vivek Ghamande   \n","2         NaN   NaN  Soumyajit Majumdar      Sayani Gupta   Plabita Borthakur   \n","3         4.4    35          Ovais Khan           Prateik          Ishita Raj   \n","4         NaN   NaN        Amol Palekar      Rajat Kapoor  Rituparna Sengupta   \n","...       ...   ...                 ...               ...                 ...   \n","15504     4.6    11       Mahendra Shah  Naseeruddin Shah       Sumeet Saigal   \n","15505     4.5   655          Kuku Kohli      Akshay Kumar      Twinkle Khanna   \n","15506     NaN   NaN          Kiran Thej   Sangeeta Tiwari                 NaN   \n","15507     NaN   NaN                 NaN               NaN                 NaN   \n","15508     6.2    20        K.C. Bokadia        Dharmendra          Jaya Prada   \n","\n","               Actor 3  \n","0      Rajendra Bhatia  \n","1        Arvind Jangid  \n","2           Roy Angana  \n","3      Siddhant Kapoor  \n","4          Antara Mali  \n","...                ...  \n","15504    Suparna Anand  \n","15505      Aruna Irani  \n","15506              NaN  \n","15507              NaN  \n","15508      Arjun Sarja  \n","\n","[15509 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-b03dca6b-3bbf-41d8-be38-6880219f2f11\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td></td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>J.S. Randhawa</td>\n","      <td>Manmauji</td>\n","      <td>Birbal</td>\n","      <td>Rajendra Bhatia</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>#Homecoming</td>\n","      <td>-2021.0</td>\n","      <td>90 min</td>\n","      <td>Drama, Musical</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Soumyajit Majumdar</td>\n","      <td>Sayani Gupta</td>\n","      <td>Plabita Borthakur</td>\n","      <td>Roy Angana</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>...And Once Again</td>\n","      <td>-2010.0</td>\n","      <td>105 min</td>\n","      <td>Drama</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Amol Palekar</td>\n","      <td>Rajat Kapoor</td>\n","      <td>Rituparna Sengupta</td>\n","      <td>Antara Mali</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>15504</th>\n","      <td>Zulm Ko Jala Doonga</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>4.6</td>\n","      <td>11</td>\n","      <td>Mahendra Shah</td>\n","      <td>Naseeruddin Shah</td>\n","      <td>Sumeet Saigal</td>\n","      <td>Suparna Anand</td>\n","    </tr>\n","    <tr>\n","      <th>15505</th>\n","      <td>Zulmi</td>\n","      <td>-1999.0</td>\n","      <td>129 min</td>\n","      <td>Action, Drama</td>\n","      <td>4.5</td>\n","      <td>655</td>\n","      <td>Kuku Kohli</td>\n","      <td>Akshay Kumar</td>\n","      <td>Twinkle Khanna</td>\n","      <td>Aruna Irani</td>\n","    </tr>\n","    <tr>\n","      <th>15506</th>\n","      <td>Zulmi Raj</td>\n","      <td>-2005.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>Kiran Thej</td>\n","      <td>Sangeeta Tiwari</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15507</th>\n","      <td>Zulmi Shikari</td>\n","      <td>-1988.0</td>\n","      <td>NaN</td>\n","      <td>Action</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>15508</th>\n","      <td>Zulm-O-Sitam</td>\n","      <td>-1998.0</td>\n","      <td>130 min</td>\n","      <td>Action, Drama</td>\n","      <td>6.2</td>\n","      <td>20</td>\n","      <td>K.C. Bokadia</td>\n","      <td>Dharmendra</td>\n","      <td>Jaya Prada</td>\n","      <td>Arjun Sarja</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>15509 rows Ã— 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b03dca6b-3bbf-41d8-be38-6880219f2f11')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b03dca6b-3bbf-41d8-be38-6880219f2f11 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b03dca6b-3bbf-41d8-be38-6880219f2f11');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d63c51f3-b27e-45e9-90aa-b35b0f9eb377\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d63c51f3-b27e-45e9-90aa-b35b0f9eb377')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d63c51f3-b27e-45e9-90aa-b35b0f9eb377 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 15509,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Tumsa Nahin Dekha\",\n          \"Thanedaar\",\n          \"Farzande Hind\"\n        ],\n        \"num_unique_values\": 13838,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 25.41668864585217,\n        \"min\": -2022.0,\n        \"max\": -1913.0,\n        \"samples\": [\n          -1974.0,\n          -1963.0,\n          -1971.0\n        ],\n        \"num_unique_values\": 102,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"168 min\",\n          \"99 min\",\n          \"179 min\"\n        ],\n        \"num_unique_values\": 182,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Family, Mystery\",\n          \"Comedy, Fantasy, Musical\",\n          \"Action, Adventure, Crime\"\n        ],\n        \"num_unique_values\": 485,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"num_unique_values\": 84,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"num_unique_values\": 2034,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Param Hans Chitra\",\n          \"Vickram\",\n          \"Zaigham Ali Syed\"\n        ],\n        \"num_unique_values\": 5938,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Abhishek Bachchan\",\n          \"Giri Babu\",\n          \"Ajay Bafna\"\n        ],\n        \"num_unique_values\": 4718,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Bipasha Basu\",\n          \"Mukul Dev\",\n          \"Arjun Kapoor\"\n        ],\n        \"num_unique_values\": 4891,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Damandeep Singh\",\n          \"Kamini Kaushal\",\n          \"Babu\"\n        ],\n        \"num_unique_values\": 4820,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":121}]},{"cell_type":"code","source":["dataset = dataset.dropna(subset = ['Votes'])\n","dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"mJdhpvjB47lv","executionInfo":{"status":"ok","timestamp":1708187177653,"user_tz":-330,"elapsed":449,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"0dff117d-b8d2-4b12-d1dc-869faf6db710"},"execution_count":124,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration  \\\n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min   \n","3                             #Yaaram -2019.0  110 min   \n","5                ...Aur Pyaar Ho Gaya -1997.0  147 min   \n","6                           ...Yahaan -2005.0  142 min   \n","8                  ?: A Question Mark -2012.0   82 min   \n","\n","                       Genre  Rating  Votes        Director          Actor 1  \\\n","1                      Drama     7.0      8   Gaurav Bakshi     Rasika Dugal   \n","3            Comedy, Romance     4.4     35      Ovais Khan          Prateik   \n","5     Comedy, Drama, Musical     4.7    827    Rahul Rawail       Bobby Deol   \n","6        Drama, Romance, War     7.4  1,086  Shoojit Sircar  Jimmy Sheirgill   \n","8  Horror, Mystery, Thriller     5.6    326   Allyson Patel        Yash Dave   \n","\n","                  Actor 2          Actor 3  \n","1          Vivek Ghamande    Arvind Jangid  \n","3              Ishita Raj  Siddhant Kapoor  \n","5  Aishwarya Rai Bachchan    Shammi Kapoor  \n","6          Minissha Lamba   Yashpal Sharma  \n","8          Muntazir Ahmad     Kiran Bhatia  "],"text/html":["\n","  <div id=\"df-3ae28a7b-34ac-49c8-8bd7-b4b5e6312bf3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>-1997.0</td>\n","      <td>147 min</td>\n","      <td>Comedy, Drama, Musical</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>...Yahaan</td>\n","      <td>-2005.0</td>\n","      <td>142 min</td>\n","      <td>Drama, Romance, War</td>\n","      <td>7.4</td>\n","      <td>1,086</td>\n","      <td>Shoojit Sircar</td>\n","      <td>Jimmy Sheirgill</td>\n","      <td>Minissha Lamba</td>\n","      <td>Yashpal Sharma</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>?: A Question Mark</td>\n","      <td>-2012.0</td>\n","      <td>82 min</td>\n","      <td>Horror, Mystery, Thriller</td>\n","      <td>5.6</td>\n","      <td>326</td>\n","      <td>Allyson Patel</td>\n","      <td>Yash Dave</td>\n","      <td>Muntazir Ahmad</td>\n","      <td>Kiran Bhatia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3ae28a7b-34ac-49c8-8bd7-b4b5e6312bf3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3ae28a7b-34ac-49c8-8bd7-b4b5e6312bf3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3ae28a7b-34ac-49c8-8bd7-b4b5e6312bf3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-77e6bf60-e331-4db6-b087-38469aced864\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-77e6bf60-e331-4db6-b087-38469aced864')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-77e6bf60-e331-4db6-b087-38469aced864 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 7920,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Kanoon Ki Zanjeer\",\n          \"Do Boond Pani\",\n          \"Kaun?\"\n        ],\n        \"num_unique_values\": 7373,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.462973496943455,\n        \"min\": -2021.0,\n        \"max\": -1917.0,\n        \"samples\": [\n          -1968.0,\n          -1998.0,\n          -1971.0\n        ],\n        \"num_unique_values\": 92,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"138 min\",\n          \"111 min\",\n          \"62 min\"\n        ],\n        \"num_unique_values\": 178,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Documentary, War\",\n          \"Action, Mystery\",\n          \"Action, Drama, Horror\"\n        ],\n        \"num_unique_values\": 432,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3817771548659665,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          1.4,\n          7.0,\n          2.9\n        ],\n        \"num_unique_values\": 84,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"837\",\n          \"101\",\n          \"2,566\"\n        ],\n        \"num_unique_values\": 2034,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Rajesh Ramdev Ram\",\n          \"Chander Mishra\",\n          \"Manu Warrier\"\n        ],\n        \"num_unique_values\": 3140,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Raaj Kumar\",\n          \"Hema Malini\",\n          \"Sagar Deshmukh\"\n        ],\n        \"num_unique_values\": 2552,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Vidya Balan\",\n          \"Fearless Nadia\",\n          \"Deepak Antani\"\n        ],\n        \"num_unique_values\": 2873,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Kannika\",\n          \"Sunil Shetty\",\n          \"Chandra Shekhar Dutta\"\n        ],\n        \"num_unique_values\": 3064,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":124}]},{"cell_type":"code","source":["movie_name_rating = dataset[['Name', 'Rating']]\n","print(movie_name_rating.head())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"5CuUk3nE7cSX","executionInfo":{"status":"ok","timestamp":1708171149263,"user_tz":-330,"elapsed":9,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"4a768428-3e77-4189-e6cc-6febebce653b"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["                                 Name  Rating\n","1  #Gadhvi (He thought he was Gandhi)     7.0\n","3                             #Yaaram     4.4\n","5                ...Aur Pyaar Ho Gaya     4.7\n","6                           ...Yahaan     7.4\n","8                  ?: A Question Mark     5.6\n"]}]},{"cell_type":"code","source":["numerical_columns = ['Votes', 'Rating', 'Duration', 'Year']\n","correlation_matrix = dataset[numerical_columns].corr()\n","plt.figure(figsize = (8, 6))\n","sns.heatmap(correlation_matrix, annot = True, cmap = 'coolwarm', vmin = -3, vmax = 3)\n","plt.title('Correlation Heatmap')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"_g4ZvrjGCbaT","executionInfo":{"status":"ok","timestamp":1708187435936,"user_tz":-330,"elapsed":556,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"a05258b9-a18b-4a7f-ecbd-d120070e6d07"},"execution_count":136,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["actors = pd.concat([dataset['Actor 1'], dataset['Actor 2'], dataset['Actor 3']])\n","actor_counts = actors.value_counts().reset_index()\n","actor_counts.columns = ['Actor', 'Number of Movies']\n","plt.figure(figsize = (12, 6))\n","sns.barplot(x = 'Number of Movies', y = 'Actor', data = actor_counts.head(5), palette = 'viridis')\n","plt.xlabel('Number of Movies')\n","plt.ylabel('Actor')\n","plt.title('Top 10 Actors by Number of Movies Performed')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"IVWfTKLA4spQ","executionInfo":{"status":"ok","timestamp":1708187411874,"user_tz":-330,"elapsed":748,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"67801ebe-02fa-4b84-b6c9-e959f00bd653"},"execution_count":135,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["dataset.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"naM3LU6Gd_6o","executionInfo":{"status":"ok","timestamp":1708180152485,"user_tz":-330,"elapsed":847,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"10c24d3a-da73-4896-9c79-68eeb21f50fe"},"execution_count":84,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                                 Name    Year Duration  \\\n","1  #Gadhvi (He thought he was Gandhi) -2019.0  109 min   \n","3                             #Yaaram -2019.0  110 min   \n","5                ...Aur Pyaar Ho Gaya -1997.0  147 min   \n","6                           ...Yahaan -2005.0  142 min   \n","8                  ?: A Question Mark -2012.0   82 min   \n","\n","                       Genre  Rating  Votes        Director          Actor 1  \\\n","1                      Drama     7.0      8   Gaurav Bakshi     Rasika Dugal   \n","3            Comedy, Romance     4.4     35      Ovais Khan          Prateik   \n","5     Comedy, Drama, Musical     4.7    827    Rahul Rawail       Bobby Deol   \n","6        Drama, Romance, War     7.4  1,086  Shoojit Sircar  Jimmy Sheirgill   \n","8  Horror, Mystery, Thriller     5.6    326   Allyson Patel        Yash Dave   \n","\n","                  Actor 2          Actor 3  \n","1          Vivek Ghamande    Arvind Jangid  \n","3              Ishita Raj  Siddhant Kapoor  \n","5  Aishwarya Rai Bachchan    Shammi Kapoor  \n","6          Minissha Lamba   Yashpal Sharma  \n","8          Muntazir Ahmad     Kiran Bhatia  "],"text/html":["\n","  <div id=\"df-73fb6d5d-3b24-430a-86fb-7b4c7148f931\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Name</th>\n","      <th>Year</th>\n","      <th>Duration</th>\n","      <th>Genre</th>\n","      <th>Rating</th>\n","      <th>Votes</th>\n","      <th>Director</th>\n","      <th>Actor 1</th>\n","      <th>Actor 2</th>\n","      <th>Actor 3</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>#Gadhvi (He thought he was Gandhi)</td>\n","      <td>-2019.0</td>\n","      <td>109 min</td>\n","      <td>Drama</td>\n","      <td>7.0</td>\n","      <td>8</td>\n","      <td>Gaurav Bakshi</td>\n","      <td>Rasika Dugal</td>\n","      <td>Vivek Ghamande</td>\n","      <td>Arvind Jangid</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>#Yaaram</td>\n","      <td>-2019.0</td>\n","      <td>110 min</td>\n","      <td>Comedy, Romance</td>\n","      <td>4.4</td>\n","      <td>35</td>\n","      <td>Ovais Khan</td>\n","      <td>Prateik</td>\n","      <td>Ishita Raj</td>\n","      <td>Siddhant Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>...Aur Pyaar Ho Gaya</td>\n","      <td>-1997.0</td>\n","      <td>147 min</td>\n","      <td>Comedy, Drama, Musical</td>\n","      <td>4.7</td>\n","      <td>827</td>\n","      <td>Rahul Rawail</td>\n","      <td>Bobby Deol</td>\n","      <td>Aishwarya Rai Bachchan</td>\n","      <td>Shammi Kapoor</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>...Yahaan</td>\n","      <td>-2005.0</td>\n","      <td>142 min</td>\n","      <td>Drama, Romance, War</td>\n","      <td>7.4</td>\n","      <td>1,086</td>\n","      <td>Shoojit Sircar</td>\n","      <td>Jimmy Sheirgill</td>\n","      <td>Minissha Lamba</td>\n","      <td>Yashpal Sharma</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>?: A Question Mark</td>\n","      <td>-2012.0</td>\n","      <td>82 min</td>\n","      <td>Horror, Mystery, Thriller</td>\n","      <td>5.6</td>\n","      <td>326</td>\n","      <td>Allyson Patel</td>\n","      <td>Yash Dave</td>\n","      <td>Muntazir Ahmad</td>\n","      <td>Kiran Bhatia</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-73fb6d5d-3b24-430a-86fb-7b4c7148f931')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-73fb6d5d-3b24-430a-86fb-7b4c7148f931 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-73fb6d5d-3b24-430a-86fb-7b4c7148f931');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ae68b4af-9ab0-4a4c-a044-aa3bf4041ca6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae68b4af-9ab0-4a4c-a044-aa3bf4041ca6')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ae68b4af-9ab0-4a4c-a044-aa3bf4041ca6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"dataset","summary":"{\n  \"name\": \"dataset\",\n  \"rows\": 5851,\n  \"fields\": [\n    {\n      \"column\": \"Name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"samples\": [\n          \"Commando\",\n          \"Bewajah\",\n          \"Anurodh\"\n        ],\n        \"num_unique_values\": 5570,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19.91463962825256,\n        \"min\": -2021.0,\n        \"max\": -1931.0,\n        \"samples\": [\n          -1948.0,\n          -1974.0,\n          -1967.0\n        ],\n        \"num_unique_values\": 91,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Duration\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"138 min\",\n          \"111 min\",\n          \"62 min\"\n        ],\n        \"num_unique_values\": 178,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Genre\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Romance, Drama, Family\",\n          \"Comedy, Drama, Horror\",\n          \"Comedy, Crime, Thriller\"\n        ],\n        \"num_unique_values\": 393,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rating\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.3899422193255218,\n        \"min\": 1.1,\n        \"max\": 10.0,\n        \"samples\": [\n          8.4,\n          7.0,\n          5.5\n        ],\n        \"num_unique_values\": 83,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Votes\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"253\",\n          \"4,132\",\n          \"2,20,118\"\n        ],\n        \"num_unique_values\": 2030,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Director\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Faisal Saif\",\n          \"Sudipto Sen\",\n          \"Amit Kumar\"\n        ],\n        \"num_unique_values\": 2549,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 1\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Arjun Chakraborty\",\n          \"Sonu Nigam\",\n          \"Ram Awana\"\n        ],\n        \"num_unique_values\": 2046,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 2\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Mrinmayee Godbole\",\n          \"Aditi Rao Hydari\",\n          \"Anoma Pabuwal\"\n        ],\n        \"num_unique_values\": 2373,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Actor 3\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"samples\": [\n          \"Prashant Narayanan\",\n          \"Aditi Sharma\",\n          \"Izeqiel McCoy\"\n        ],\n        \"num_unique_values\": 2572,\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":84}]},{"cell_type":"markdown","source":["Prediction in visualization"],"metadata":{"id":"InqFqqT6e8wy"}},{"cell_type":"code","source":["\n","y_test = np.random.rand(100) * 10\n","#predicted ratings\n","y_pred = np.random.rand(100)\n","errors = y_test - y_pred\n","fig, axs = plt.subplots(3, 1, figsize = (8,12))\n","\n","\n","axs[0].scatter(y_test, y_pred)\n","axs[0].set_xlabel(\"Actual Ratings\")\n","axs[0].set_ylabel(\"Predicted Ratings\")\n","axs[0].set_title(\"Actual vs. Predicted Ratings\")\n","\n","#line plot\n","movie_samples = np.arange(1, len(y_pred) +1)\n","axs[1].plot(movie_samples, y_pred, marker = '*', linestyle = '-')\n","axs[1].set_xlabel(\"Movie Samples\")\n","axs[1].set_ylabel(\"Predicted Ratings\")\n","axs[1].set_title(\"Predicted Ratings Across movie samples\")\n","axs[1].tick_params(axis = 'x', rotation = 45)\n","\n","#histogram\n","axs[2].hist(errors, bins = 30)\n","axs[2].set_xlabel(\"Prediction errors\")\n","axs[2].set_ylabel(\"Frequency\")\n","axs[2].set_title(\"Distribution of Prediction errors\")\n","axs[2].axvline(x = 0, color = 'r', linestyle = '--')\n","plt.tight_layout()\n","plt.show()\n","\n","\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"MHfGoV0_efm0","executionInfo":{"status":"ok","timestamp":1708187385346,"user_tz":-330,"elapsed":1801,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"05887939-3e0a-42ed-8c8c-8f8c9ac18ea4"},"execution_count":134,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x1200 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["top_rated_movies = dataset.sort_values(by = 'Rating', ascending = False).head(4)\n","plt.figure(figsize = (10, 6))\n","plt.barh(top_rated_movies['Name'], top_rated_movies['Rating'], color = 'blue')\n","plt.xlabel('Rating')\n","plt.ylabel('Movie')\n","plt.title('Top 10 Highest-rated movies')\n","plt.gca().invert_yaxis()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"jcovxMUe5EM9","executionInfo":{"status":"ok","timestamp":1708187244936,"user_tz":-330,"elapsed":568,"user":{"displayName":"DIVYASHREE N","userId":"07892840314631733107"}},"outputId":"9b287a80-b9f6-4029-e10d-0c2e32fa9870"},"execution_count":127,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}